---
name: Time to shine luv
on:
  workflow_dispatch:
    inputs:
      message:
        description: "say something dirty"
        required: true
        default: "wiscussy"
  pull_request: ~
env:
  SOME_VAR: "random_value"
jobs:
  print-input-based-on-workflow-on-type:
    runs-on: ubuntu-latest
    steps:
      - name: How to detect that you run on PR
        if: "${{ github.event.inputs.message == '' }}"
        run: echo "This is a PR because required input is empty"
      - name: How to detect that you run on manual workflow
        if: "${{ github.event.inputs.message != '' }}"
        run: >
          echo "This is a manual workflow
          because someone send you a message:
          ${{ github.event.inputs.message }}"
      - name: input provided
        if: "${{ github.events.inputs.message != '' }}"
        run: echo "Some one is chatty ${{ github.event.inputs.message }}"
      - name: input is not provided
        if: "${{ github.events.inputs.message == '' }}"
        run: echo "Some one is chatty but has nothing to say"
  test-weird-patterns:
    runs-on: ubuntu-latest
    steps:
      - name: just have some fun
        run: echo "By bitcoin with all my savings!(<|_<|)"
  test-env:
    runs-on: ubuntu-latest
    if: github.env.SOME_VAR == 'random_var'
    steps:
      - name: just have some fun
        run: echo "By bitcoin with all my savings!(<|_<|)"
  run-if-master:
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/master'"
    steps:
      - name: just have some fun
        run: echo "By bitcoin with all my savings!(<|_<|)"
  github-wtf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: inconsistency
        run: |
          SIMPLE=string
          echo $SIMPLE
          echo ${SIMPLE}
          echo "$SIMPLE"
          echo "${SIMPLE}"

          BRANCH=$(git branch --show-current)
          echo $BRANCH
          echo ${BRANCH}
          echo "$BRANCH - ${BRANCH}"
          echo "BREAD=borodinsky" >> $GITHUB_ENV
          echo "$BREAD "$BREAD
          echo "${{ env.BREAD }}" ${{ env.BREAD }}
  set-multijob-vars:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: set vars to be used after
        id: set
        run: |
          export "LOL=suck-it-jin-yang"
          echo "::set-output name=lol::${LOL}"
      - name: set updatability output
        id: update
        run: |
          git fetch
          #DIFF=$(git diff $(git branch --show-current)...origin/test)
          #if [ "$DIFF" != "" ];then
          #  echo "Updat needed"
          #fi
          # This is dump to do because of merge commits
          #
          TEST=$(git rev-parse origin/test)
          MASTER=$(git rev-parse origin/master)
          echo $TEST == $MASTER
          if [[ $TEST != $MASTER ]];then
            RUN="update"
          fi
          echo set from condition RUN=$RUN
          echo Current $RUN
          echo About to set a branch to $RUN
          echo ::set-output name=update::$RUN
    outputs:
      update: ${{ steps.update.outputs.update }}
      lol: ${{ steps.set.outputs.lol }}
  get-vars:
    needs: [set-multijob-vars]
    runs-on: ubuntu-latest
    steps:
      - name: print info
        run: |
         echo github.ref ${{ github.ref }}
         echo github.ref == master ${{ github.ref == 'refs/heads/master' }}
         echo ${GITHUB_REF##*/}
         echo 'Output branch ${{ needs.set-multijob-vars.outputs.update }}'
      - name: get var that was set
        run: echo 'Gilfoyle says ${{ needs.set-multijob-vars.outputs.lol }}'
      - name: run update routine
        if: ${{ needs.set-multijob-vars.outputs.update == 'update' }}
        run: echo 'Hey! You finally awake, dragonborn.'
  skip-if-output:
    runs-on: ubuntu-latest
    needs: [set-multijob-vars]
    if: ${{ needs.set-multijob-vars.outputs.update != 'update' }}
    steps:
      - name: print output
        run: echo 'Updatable:${{ needs.set-multijob-vars.outputs.branch }}'
  run-only-when-master-up-to-date-with-test:
    runs-on: ubuntu-latest
    needs: [skip-if-output]
    steps:
      - name: sup
        run: |
          echo "Aha, here we go again"
          echo "So this wf is not skipped because of the condition on
          `skip-if-output` job"
  mess-with-a-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: master
      - run: echo $(git branch --show-current)
      - run: echo ${{ env.GITHUB_REF }}
      - run: echo ${{ github.ref }}
      - name: Declare new branch through GITHUB_REF
        run: |
          DECLARED=`${{ env.GITHUB_REF == '' &&
          'GITHUB_REF is not declared' ||
          env.GITHUB_ENV }}`
          echo "Current $DECLARED"
          echo ${{ github.ref }}
      - name: print branch after set
        run: echo "Current= ${{ env.GITHUB_REF }}"
  after-all:
    runs-on: ubuntu-latest
    needs: get-vars
    steps:
      - name: end this
        run: echo 'Have mercy'
